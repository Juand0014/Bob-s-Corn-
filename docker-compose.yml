version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: bobs-corn-db
    environment:
      POSTGRES_DB: bobs_corn_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bobs-corn-network

  redis:
    image: redis:7-alpine
    container_name: bobs-corn-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bobs-corn-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: bobs-corn-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@database:5432/bobs_corn_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
    ports:
      - "3001:3001"
    depends_on:
      - database
      - redis
    networks:
      - bobs-corn-network

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    container_name: bobs-corn-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - bobs-corn-network

networks:
  bobs-corn-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: